imports:
  User: Dashboard.Common
  CreateNammaTagRequest: Lib.Yudhishthira.Types
  UpdateNammaTagRequest: Lib.Yudhishthira.Types
  APISuccess: Kernel.Types.APISuccess
  ChakraQueriesAPIEntity: Lib.Yudhishthira.Types
  AppDynamicLogicReq: Lib.Yudhishthira.Types
  AppDynamicLogicResp: Lib.Yudhishthira.Types
  LogicDomain: Lib.Yudhishthira.Types
  AppDynamicLogic: Lib.Yudhishthira.Types.AppDynamicLogic
  RunKaalChakraJobReq: Lib.Yudhishthira.Types
  RunKaalChakraJobRes: Lib.Yudhishthira.Types
  GetLogicsResp: Lib.Yudhishthira.Types
  CreateTimeBoundRequest: Lib.Yudhishthira.Types
  LogicRolloutObject: Lib.Yudhishthira.Types
  LogicRolloutReq: Lib.Yudhishthira.Types
  TimeBoundResp: Lib.Yudhishthira.Types
  Chakra: Lib.Yudhishthira.Types
  ChakraQueryResp: Lib.Yudhishthira.Types
  AppDynamicLogicDomainResp: Lib.Yudhishthira.Types
  AppDynamicLogicVersionResp: Lib.Yudhishthira.Types
  UpdateTagReq: Lib.Yudhishthira.Types

module: NammaTag

types: {}

apis:
  - POST:
      endpoint: /tag/create
      auth: ApiAuthV2
      request:
        type: CreateNammaTagRequest
      response:
        type: APISuccess
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG CREATE_NAMMA_TAG
  - POST:
      endpoint: /tag/update
      auth: ApiAuthV2
      request:
        type: UpdateNammaTagRequest
      response:
        type: APISuccess
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG CREATE_NAMMA_TAG
  - DELETE:
      endpoint: /tag/delete
      auth: ApiAuthV2
      mandatoryQuery:
        tagName: Text
      response:
        type: APISuccess
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG CREATE_NAMMA_TAG
  - POST:
      endpoint: /query/create
      auth: ApiAuthV2
      request:
        type: ChakraQueriesAPIEntity
      response:
        type: APISuccess
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG CREATE_CHAKRA_QUERY
  - POST:
      endpoint: /appDynamicLogic/verify
      auth: ApiAuthV2
      request:
        type: AppDynamicLogicReq
      response:
        type: AppDynamicLogicResp
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG APP_DYNAMIC_LOGIC_VERIFY
  - GET:
      endpoint: /appDynamicLogic
      auth: ApiAuthV2
      mandatoryQuery:
        domain: LogicDomain
      query:
        version: Int
      response:
        type: "[GetLogicsResp]"
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG APP_DYNAMIC_LOGIC_VERIFY
  - POST:
      endpoint: /runJob
      auth: ApiAuthV2
      request:
        type: RunKaalChakraJobReq
      response:
        type: RunKaalChakraJobRes
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG RUN_KAAL_CHAKRA_JOB
  - GET:
      endpoint: /timeBounds
      auth: ApiAuthV2
      mandatoryQuery:
        domain: LogicDomain
      response:
        type: TimeBoundResp
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG TIME_BOUNDS
  - POST:
      endpoint: /timeBounds/create
      auth: ApiAuthV2
      request:
        type: CreateTimeBoundRequest
      response:
        type: APISuccess
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG TIME_BOUNDS
  - DELETE:
      endpoint: /timeBounds/delete
      auth: ApiAuthV2
      mandatoryQuery:
        domain: LogicDomain
        name: Text
      response:
        type: APISuccess
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG TIME_BOUNDS
  - GET:
      endpoint: /appDynamicLogic/getLogicRollout
      auth: ApiAuthV2
      mandatoryQuery:
        domain: LogicDomain
      query:
        timeBound: Text
      response:
        type: "[LogicRolloutObject]"
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG APP_DYNAMIC_LOGIC_ROLLOUT
  - POST:
      endpoint: /appDynamicLogic/upsertLogicRollout
      auth: ApiAuthV2
      request:
        type: LogicRolloutReq
      response:
        type: APISuccess
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG APP_DYNAMIC_LOGIC_ROLLOUT
  - GET:
      endpoint: /appDynamicLogic/versions
      auth: ApiAuthV2
      mandatoryQuery:
        domain: LogicDomain
      query:
        limit: Int
        offset: Int
      response:
        type: AppDynamicLogicVersionResp
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG APP_DYNAMIC_LOGIC_VERIFY
  - GET:
      endpoint: /appDynamicLogic/domains
      auth: ApiAuthV2
      response:
        type: AppDynamicLogicDomainResp
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG APP_DYNAMIC_LOGIC_VERIFY
  - GET:
      endpoint: /query/all
      auth: ApiAuthV2
      mandatoryQuery:
        chakra: Chakra
      response:
        type: ChakraQueryResp
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG GET_CHAKRA_QUERY
  - POST:
      endpoint: /{customerId}/updateCustomerTag
      auth: ApiAuthV2
      params:
        customerId: Id User
      request:
        type: UpdateTagReq
      response:
        type: APISuccess
      migrate:
        userActionType: ApiAuth APP_BACKEND_MANAGEMENT NAMMA_TAG MANUAL_TAG_UPDATE
